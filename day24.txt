1、IO流-File类的使用
    File类的一个对象，代表一个文件或一个文件目录；
    File类声明在java.io包下；
    创建File类的实例
        File(String filePath)
        File(String parentPath,String childPath)
        File(File parentFile,String childPath)
    相对于绝对路径（在Windows和Dos系统默认使用"\"；UNIX和URL使用"/"来表示）
        相对路劲：相对于某个路径，指明的路径；
        绝对路径：包含盘符在内的文件或文件目录的路径；
        注：为了解决这个隐患，File类提供了一个常量（public static final String separator），根据操作系统，动态地提供分隔符；
            File file1 = new File("D:\\workspace\\javaSenior")
            File file2 = new File("D:"+File.separator+"workspace"+File.separator+"javaSenior");
    
2、File类的常用方法
    普通File方法
        public String getAbsolutePath()：获取绝对路径
        public String getPath()：获取路径
        public String getName()：获取名称
        public String getParent()：获取上一层文件目录路径，若无，返回NULL
        public long Length()：获取文件长度（即字节数），不能获取目录长度；
        public long lastModified()：获取最后一次地修改时间，毫秒值；
        public boolean renameTo(File dest)：把文件重命名为指定的文件路径（例：file1.rename(file2)，要想保证返回true，需要file1在硬盘中存在，且file2不能在硬盘中存在）
    如 下的两个方法适用于文件目录
        public String[] list()：获取指定目录下的所有文件或者文件目录的名称数组
        public File[] listFiles()：获取指定目录下的所有文件或者文件目录的File数组
    File类的判断方法
        public boolean isDirectory()：判断是否是文件目录
        public boolean isFile()：判断是否是文件
        public boolean exists()：判断是否存在
        public boolean canRead()：判断是否可读
        public boolean canWrite()：判断是否可写
        public boolean isHiden()：判断是否隐藏
