1、JVM中对象的实例化
	创建的对象方式
		new关键字创建；
		Class的newInstance()
			反射的方式，只能调用空参的构造器，权限必须是public；
		Constructor的newInstance()
			反射的方式，可以调用空参的构造器，带参的构造器，权限没有要求；
		使用clone()
			不调用任何构造器，当前类需要实现Cloneable接口实现clone()；	
		使用反序列化
			从文件或网络中获取一个对象的二进制流；
		第三方库Objenesis；
	创建对象的步骤
		判断对象对应是否加载、连接、初始化
			虚拟机遇到一条new指令，首先去检查这个指令的参数能否在Metaspace的常量池中定位到一个类的符号引用，并且检查这个符号引用代表的类是否已经被加载、解析和初始化；
			如果没有那么在双亲委派模式下，使用当前类加载器以ClassLoader+包名+类名为Key进行查找对应的.class文件，如果没有找到文件则抛出ClassNotFoundException异常，如果找到则进行类加载，生成对应的Class类对象；
		为对象分配内存（首先计算对象占用空间大小，接着在堆中划分一块内存给新对象，如果实例成员变量是引用变量，仅分配变量空间即可，即4个字节大小）		
			如果内存规整（指针碰撞法来存放对象）；
			如果内存不规整
				虚拟机需要维护一个列表（空闲列表法存放对象）
				空闲列表
					当内存中已使用和未使用的内存相互交错，虚拟机将维护一个列表，记录哪些内存块是可用的，在分配的时候从列表中找到一块足够大的空间划分给对象实例，并更新列表上的内容；
		处理并发安全问题
			采用CAS配上失败重试保证更新的原子性；
			每个线程预先分配一块TLAB；
		初始化分配到的空间
			所有属性设置默认值，保证对象实例字段不在赋值时可以直接使用
				属性初始化默认值、显示初始化或代码块中初始化、构造器中初始化；
		设置对象的对象头
			将对象所属的类、对象的HashCode和对象的GC信息、锁信息等数据存储在对象的对象头中，这个过程的具体设置方式取决于JVM实现；
		执行init方法进行初始化
			在Java程序的角度来看，初始化才正式开始，初始化成员变量，执行实例化代码块，调用类的构造方法，并把堆内对象的首地址赋值给引用变量，一般来说由字节码中是否跟随invokespecial指令所决定，new指令后会接着执行方法，把对象按照程序员的意愿进行初始化；
	对象的内存布局
		对象头
			运行时元数据
				哈希值、GC分代年龄、锁状态标志、线程持有的锁、偏向线程ID、偏向时间戳；
			类型指针
				指向类元数据，确定该对象所属的类型；
		示例数据
			对象真正存储的有效信息，包括和程序代码中定义的各种类型的字段（包括从父类继承下来的和本省拥有的字段）；
			规则
				相同宽度的字段总是分配在一起；
				父类中定义的变量会出现在子类之前；
				如果CompactFields参数为true（默认为true），则子类的窄变量可能插入到父类变量空隙；
		对齐填充
			不是必须的，也没有特别含义，仅仅起到占位符的作用；
	对象访问定位
		创建对象的目的是为了使用它；
		JVM是通过栈帧上的reference访问；
		对象访问的方式主要有两种
			句柄访问
				栈中的保存的引用，句柄池中保存到对象实例数据的指针和到对象类型数据的指针，分别指向堆中的对象实例和方法区中的对象类型数据；
				优缺点
					优点：对象被移动（垃圾收集时）只会改变句柄中实例数据指针即可，栈中保存的引用本身不需要修改；
					缺点：需要在堆中单独开辟一块区域用于句柄池中指针的保存；
			直接指针（HotSpot采用）
				优缺点
					优点：不需要开辟新空间，访问过程中效率更高；
					缺点：对象被移动时需要在栈中更换引用；
				栈中的保存的引用，指向堆中对象实例数据，对象实例数据中的对象类型数据的指针指向方法区中的对象类型数据；
	直接内存
		分配内存
			使用ByteBuffer类中的allocateDirect(int)方法在物理内存空间中分配指定的内存大小（传入的参数大小为bit）；
		回收内存
			将ByteBuffer类对象置空，再调用System.gc()回收分配出去的内存；
		直接内存优缺点
			优点
				使用直接内存可以提高文件的读写速度；
			缺点
				分配回收成本较高；
				不受JVM内存回收管理；
		直接内存大小通过MaxDirectMemorySize设置，如果不指定则默认与对的最大值-Xmx参数值一致；
	