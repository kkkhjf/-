 1、匿名对象
    创建一个对象没有显式的赋给一个变量名，即为匿名对象；
    匿名对象只能被调用一次；
    使用示例：mail.show(new Phone())
             class PhoneMail{
                public void show(Phone phone){
                    phone.sendEmail();
                    phone.playGame();
                }
             }
             
2、封装性
    程序设计追求“高内聚，低耦合”
        高内聚（类的内部数据操作细节自己完成，不允许外部干涉），低耦合（仅对外暴露少量的方法用于使用）；
    封装性的设计思想
        该隐藏的封装起来，只留下几个对外的接口。
    private修饰词就是封装性的体现
        私有化：被private修饰的属性不能被直接访问，只能通过设置的方法（get、set）进行访问；
        不对外暴露的私有方法。
    四种权限修饰符（private，default，protect，public）：
        四种权限用来修饰类及类的内部结构（属性、方法、构造器、内部类），修饰类只能用public和default；
        private：只能在类内部；default：类内部和同一个包；protected：类内部、同一个包和不同包的子类；public：所有情况下。
    封装性的体现：
        将类的属性xxx私有化，提供方法获取和设置此属性的值；
        不对外暴露的私有的方法；
        单例模式（构造器私有化）；
        如果不希望类在包外被调用，可以将包设置为缺省。

    Java提供四种权限修饰符，体现类及类的内部结构，在被调用时的可见性的大小。

3、构造器（类的三种结构【属性、方法、构造器】）
    构造器的作用：创建对象；
    如果没有显式地定义构造器，系统默认一个空的构造器；构造器的名子就是类名；
    定义格式：public 类名(){方法体可写可不写}
    可以定义多个构造器，一旦定义了一个构造器系统就不会再提供默认的构造器；
    属性赋值的先后顺序：默认初始化、显式初始化、构造器中初始化，通过“对象.方法”或“对象.属性”赋值；（按顺序赋值）
    
4、JavaBean
    是一种Java语言写成的可重用组件，所谓JavaBean是指如下标准的Java类（雷士公共的、有一个午餐的公共构造器、有属性，
        且有对应的get和set方法）
    用户可以使用JavaBean将功能、处理、值、数据库访问和其他任何可以用Java代码创造的对象进行打包，用户可以认为
        JavaBean提供了一种可以随时复制和粘贴的功能。

5、UML类图
    +：public类型，-：private类型，#：protected类型。
    
6、关键字this
    this在方法内部使用时代表这个方法所属对象的引用，在构造器中使用时代表该构造器正在初始化的对象；
    this表示当前对象，可以调用类的属性、方法和构造器，并且在构造器内部表示正在创建的对象；
    当在方法内调用该方法的对象时，就是用this方法（用this来区分局部变量和属性）；
    this可以用来修饰构造器：
        this（参数列表）this指构造器名即类名，括号中的参数个数代表不同的构造器（this在一个构造器中只能调用其他构造器，否则陷入死循环）；
        一个类中有n个构造器，则最多有n-1个构造器中可以使用this（参数列表）；
        this（参数列表）必须声明在当前构造器的首行。
    
7、package关键字
    为了更好的实现项目中类的管理，提供包的概念；
    使用package声明类或者接口所属的包，声明在源文件的首行；
    包属于标识符，遵守标识符的命名规范；
    每“.”一次代表一篇文件目录，同一个包下不能命名相同名字的接口或类。
   
8、MVC设计模式
    MVC将整个程序分为三个层次（视图模型层、控制器层和数据模型层）
        模型层：主要处理数据（model.bean/domain,model.dao,model.db）;
        控制层：处理业务逻辑（controller.activity,caontroller.fragment,controller.adapter,~.service,~.base）;         视图层：显示数据（view.utils,view.ui）。
        
9、import关键字
    在源文件中显式地使用import结构导入指定包下的类、接口；
    声明在包的声明和类的声明之间；
    如果导入多个结构，并列写出即可；
    可以XXX.*的方式导入xxx包下的所有结构；
    如果使用的类和接口是java.lang包下定义的，则可以省略import；
    import static可以导入指定类或接口的静态结构（属性或方法）。
        
