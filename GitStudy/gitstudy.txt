1、Git
	版本控制
		实现跨区域协同开发；
		追踪和记载一个或者多个文件的历史记录；
		组织和保护你的源代码和文档；
		统计工作量；
		并行开发、提高开发效率；
		追踪记录震哥哥软件的开发过程；
		减轻开发人员的负担、节省时间，同时降低人为错误；
	Linux基础命令
		cd：改变目录；
		cd..：回退上一个目录，直接cd进入默认目录；
		pwd：显示当前所在的目录路径；
		ls/ll：都是列出当前目录中的所有文件，只不过ll列出的内容更详细；
		touch：新建一个文件；
		rm：删除一个文件；
		mkdir：新建一个目录；
		rm -r：删除一个文件夹；
		mv a b：移动文件夹，a是需要移动的文件，b是目标文件；
		reset：重新初始化终端/清屏；
		clear：清屏；
		history：查看命令历史；
		help：帮助；
		exit：退出；
	Git配置
		git config --global user.name "hjf" #配置用户名
		git config --global user.email "hjfowner@163.com" #配置用户邮箱
	Git基本理论
		Git本地又三个工作区域，工作目录、暂存区和资源库；
			工作区：平时存放项目代码的地方；
			暂存区：用于临时存放你的改动，事实上它只是一个文件，保存即将提交到文件列表信息；
			仓库区：安全存放数据的位置，这里有你提交到所有版本的数据，其中HEAD指向最新放入仓库的版本；
			远程仓库：托管代码的服务器；
		Git将要提交的文件先放入暂存区，再将其上传到仓库；
	Git项目的创建
		创建全新的仓库、
			git init：执行后会在项目目录中多出一个.git目录
		远程克隆仓库
			git clone url：将远程服务器上的仓库完全镜像一份至本地；
	Git文件操作
		git add .	添加所有文件到暂存区；
		git commit -m "消息内容"	提交暂存区中的内容到本地仓库 -m后面跟的是提交信息；
		忽略文件（.gitignore）
			文件规则
				#开始的行会被忽略；
				可以使用Linux通配符，*代表多个字符，？代表一个字符，[abc]代表可选字符范围，{string1, string2, string3,...}代表可选的字符串；
				名称前面加一个！，表示例外规则，将不被忽略；
				名称前是一个路径分隔符/，表示要忽略的文件在此目录下，而分隔符后面的文件不忽略；
				名称后是一个路径分隔符/，表示忽略的是此目录下该名称的子目录，而非文件；
		同步远程仓库
			设置本机绑定SSH公钥，实现免密码登录；
			创建远程仓库(在远程服务器中创建仓库)；
			将远程仓库克隆到本地，在使用add，commit和push命令进行代码同步；
				
	
		
		