1、多线程补充
    在Thread类中有两种构造函数Thread（）和Thread（new Runnable），第一种是直接创建对象，第二种是以实现接口的方式创建对象。
2、String类
    String类代表字符串，字符串存储在字符数组中；
    String实现了Serializable接口：表示字符串是支持序列化；
          实现了Comparable接口：表示String可以比较大小。
    String内部定义了final char[] value用于存储字符串数据，表明String拥有不可变性；
          体现：对当前字符串重新赋值时，需要重写指定内存区域赋值，不能使原有的value进行赋值；
                当对现有的字符串进行连续操作时，也需要重新指定内存区域赋值，不能使用原有的value赋值；
                当调用String的replace()方法修改指定字符或字符串时，也需要重新指定内存区域。
    String通过字面量的方式（区别于new）给一个字符串赋值，此时的字符串值声明在字符串常量池中，字符串常量池中是不会保存相同内容的的字符串；
    String的实例化方式：
        方式一：通过字面量定义（数据都在常量池里）
        方式二：通过new + 构造器的方式
        String s = new String("abc");//创建了两个对象，一个是new，还有一个是字面量定义的;
        注：常量与常量的拼接结果在常量池，且常量池中不会存在相同内容的常量；
            只要其中有一个是变量，结果就会在堆中；
            如果拼接的结果调用intern()方法，返回值在常量池中。
    String常用方法：
        toLowerCase()、toUperCase()在改变大小写时不会改变原有的字符串，会创建一个新的字符串重新赋值；
        Trim()去除首尾空格;
        equalsIgnoreCase()忽略大小写；
        compareTo()比较内容大小，涉及到字符串排序；
        substring()返回一个新的字符串，从参数处开始截取；
        endsWith()测试字符串是否以指定的后缀结尾；
        startsWith()是否以指定地字符串开头； 
        contains()是否包含指定的字符串；
        indexOf()返回指定字符串首次出现的索引；
        replace()替代指定的字符或字符串；
        matches()告知字符串是否匹配给定的正则表达式；
        split()根据给定的正则表达式匹配拆分此字符串。
        
