1、事务及数据库事务处理原则
	事务
		一组逻辑单元，使数据从一种状态变成另一种状态；
	事务处理
		保证所有事务都作为一个工作单元来执行，即使出现了故障，都不能改变这种执行方式。当一个事务存在多个操作时，
			要么所有事物都被提交，要么放弃所有修改，回滚整个事务到最初状态；
		数据一旦提交就不可回滚；
		自动提交的操作
			DDL操作一旦执行就会自动提交；
			DML默认情况下一旦执行就会自动提交
				可以通过set autocommit = false的方式取消DML操作的自动提交；
			默认关闭连接时也会实现自动提交
	代码实现
		将Connection从外部传入；
		关闭资源的时候不要把Connection关闭；
		Connection.setAutoCommit(false);
		Connection.rollback();出现异常时回滚
		把自动提交打开，使用数据库连接池时需要注意；
	事务ACID属性
		原子性
			事务是不可分割的工作单位；
		一致性
			事务必须使数据库从一个一致性状态变换成另一个一致性状态；
		隔离性
			一个事务的执行不能被其他事务干扰；
		持久性
			一个事物一旦被提交，它对数据库的改变就是永久性的；
	数据库的并发问题
		脏读
			对于T1、T2，T1读取了已经被T2更新但是还没有提交的字段，若T2回滚，T1读取的内容就是临时且无效的；
		不可重复读
			对于两个事务T1、T2，T1读取了一个字段，然后T2更新了该字段。T1再次读取同一个字段，值就不同了；
		幻读
			对于两个事务T1、T2，T1从一个表中读取了一个字段，然后T2在该表中插入了一些新的行。如果T1再次读取同一个表，就会多出几行；
	四种隔离级别
		READ UNCOMMITED（读未提交数据）
			三种问题都会出现；
		READ COMMITED（读已提交数据）
			可避免脏读；
		REPEATABLE READ（可重复读）
			可避免脏读和不可重复读；
		SERIALIZABLE（串行化）
			三种情况都可以避免，但是性能十分低下；
	数据库隔离级别操作
		查看数据库隔离级别
			select @@tx_isolation;
		设置当前MySQL
			set transaction isolation level read commit;
		设置数据库系统的全局的隔离级别
			set global transaction isolation level read commit；
	代码中设置数据库隔离级别
		查看数据库隔离级别
			conn.getTransactionIsolation();
		设置数据库隔离级别
			conn.setTransactioIsolation(Connection.TRANSACTION_READ_CPMMITED);