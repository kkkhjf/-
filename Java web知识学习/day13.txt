1、Web中的路径
	JavaWeb中分为相对路径和绝对路径
		相对路径
			.		表示当前路径
			..		表示上一级路径
			资源名	表示当前目录/资源名
		绝对路径
			http://ip:port/工程名/资源名
	javaWeb中/斜杠的含义
		在web中/斜杠是一种绝对路径
		/斜杠如果被浏览器解析，得到的地址是：http://ip:port/；
			<a href="/"> 斜杠 </a>
		/斜杠如果被服务器解析，得到的地址是：http://ip:port/工程路径；
			<url-pattern>/requestServlet</url-pattern>
			servletContext.getRealPath("/");
			request.getRequestDispatcher("/");
			特殊情况：response.sendRediect("/");  把斜杠直接发送给浏览器解析，得到：http://ip:port/；

2、HttpServletResponse类
	HttpServletResponse类和HttpServletRequest类一样，每次请求进来，
		Tomcat服务器都会创建一个Response对象传递给Servlet程序去使用，HttpServletRequest表示请求过来的信息，
		HttpServletResponse表示所有响应的信息，我们要设置返回给客户端的信息可以通过HttpServletResponse对象来进行设置；
	响应流
		字节流		getOutStream()	常用于下载（传递二进制数据）
		字符流		getWrite()		常用于回传字符串（常用）
			注：两个流同时只能使用一个，同时使用会产生错误；
		向客户端回传数据
			回传字符串实例：
				PrintWriter writer = response.getWriter();
				writer.write("response's content.");
			解决回传数据的中文乱码
				方式一
					//设置服务器的字符编码
					response.setCharacterEncoding("UTF-8");
					//通过响应头文件设置浏览器的字符编码
					response.setHeader("Content-Type","text/html;charset=UTF-8");
				方式二
					//setContentType()方法可以同时设置服务器和客户端的字符编码
					//此方法一定要在获取流对象之前调用
					response.setContentType("text/html;charset=UTF-8");
					
3、请求重定向
	请求重定向：客户端给服务器发请求，然后服务器告诉客户端，给一个新地址，去新地址访问（因为之前的地址可能被废弃）；
	重定向过程	
			客户端     ------------------------------------->					服务器
		解析响应得知地址作废<------------------------	当前地址废除后服务器告诉客户端当前地址作废（返回状态码302）
		发起新请求			Location响应头保存新地址
						
				       -------------------------> 
						    向新地址发送请求
		客户端收到响应	<-------------------------
		解析响应显示数据 	新地址返回响应信息
	请求重定向代码实例
		方式一
			response1对客户端请求的处理
				//设置响应状态码302，表示重定向
				response.setStatus(302);
				//设置响应头，说明新的地址在哪里
				response.setHeader("Location","http://localhost:8080/ServletTest/response2");
			response2对客户端请求的处理
				response.setContentType("text/html;charset=utf-8");
				response.getWriter().write("Response2 成功处理！");
		方式二
			response1对客户端请求的处理
				response.sendRediect("http://localhost:8080/ServletTest/response2");
	请求重定向的特点
		浏览器地址栏有变化；
		两次请求；
		不共享Request域中的数据；
		不能访问WEB-INF目录下的资源（请求转发可以访问WEB-INF目录下的资源）；
		可以访问工程外的资源；

4、JavaEE三层架构
		客户端							 JavaEE三层架构									数据库
		http://ip:port/工程名/资源名	Web层（视图展现层）							根据持久层的信息返回指定的数据
											获取请求参数封装成Bean对象
											调用Service层处理业务
											响应数据给客户端，请求转发，重定向
										Service业务层
		逐层返回知道客户端解析展示在		处理业务逻辑
		页面上								调用持久层保存到数据库
										Dao持久层 
											只负责跟数据库进行交互
											CRUD操作
		
		根据三层结构在项目中命名包名
			Web层		com.hejianfeng.erb/servlet/controller
			Service层	com.hejianfeng.service		Service接口包
						com.hejianfeng.service.impl	Service接口实现类
			Dao持久层	com.hejianfeng.dao			Dao接口包
						com.hejianfeng.dao.impl		Dao接口实现类
			实体Bean对象com.hejianfeng.pojo/domain/bean	JavaBean类
			测试包		com.hejianfeng.test/unit
			工具类		com.hejianfeng.utils
		JDBC配置文件
			数据库名称
			url=jdbc:mysql://localhost:3306/book
			数据库的用户名和密码
			username=root
			passpord=1234
			driverClassName=com.mysql.jdbc.Driver
			initialSize=10
			maxActive=20
			maxWait=1000
			filters=wall