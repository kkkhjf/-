1、表单提交
	form标签是表单标签
		action属性设置提交的服务器地址
		method属性设置提交的方式GET（默认值）或POST
	表单提交时，数据没有发送给服务器的三种情况
		表单项没有name属性值；
		单选、复选（下拉列表中的option标签）都需要添加value属性，以便发送给服务器；
		表单项不在提交的form标签中；
	GET请求的特点
		浏览器地址栏中的地址是：action属性[+?+请求参数]，请求参数的格式：name=value&name=value...；
		不安全；
		有数据长度的限制
	POST请求的特点
		浏览器地址栏只有action属性值；
		相对于GET请求更安全；
		理论上没有数据长度限制；

	其他标签(div标签、span标签、p标签)
		<div></div> 	默认独占一行
		<span></span>   它的长度是封装数据的长度
		<p></p>			默认会在段落的上方和下方各空出一行（如果已有就不再空）

2、CSS介绍
		选择器{
			属性：值;
		}
		选择器：浏览器根据"选择器"决定受CSS样式影响的HTML元素（标签）；
		属性：类似于HTML标签中的属性；
		多个声明：在属性中加入多个声明中用逗号隔开；
	CSS和HTML结合使用的第一种方式
		使用style属性在<div>标签中使用（style="属性：值"）
		这种方式的缺点
			标签多了，样式多了，代码量非常大；
			可读性非常差；
			CSS代码没什么复用性；
	CSS和HTML结合使用的第二种方式
		在head标签中，使用style标签来定义自己所需的CSS样式；
		格式如下：
			xxx{
				Key：value value;
			}
		style标签内不能使用常规的<!-- -->注释，可以使用/*   */注释内容；
		方式二的缺点
			只能在一个页面内服用代码，不能再多个页面服用css代码；
			维护起来不方便，修改要去每个页面修改，工作量太大；
	CSS和HTML结合使用的第三种方式
		创建.css文件，在.css文件中填写配置信息，然后在<head>标签中使用<link rel="stylesheet" type="text/css" href="配置文件">标签
			导入配置文件；
	CSS选择器
		标签名选择器
			格式：
				标签名{
					属性：值
				}
			标签名选择器可以决定哪些标签能够被动的使用这个样式；
		id选择器
			格式：
				#id 属性值{
					属性：值
				}
			在标签中使用id="value"来给标签附上id值；
			id选择器，可以让我们通过id属性选择性的去使用这个样式；
		class选择器
			格式：
				.class{
					属性：值
				}
			class类型选择器，可以通过class属性有效的选择性地去使用这个样式； 
		组合选择器
			格式：
				选择器1，选择器2，，，选择器n{
					属性：值
				}
			组合选择器可以让多个选择器共用同一个css样式代码；
	CSS常用样式
		颜色 color
		宽度 width
		高度 height
		背景颜色 background-color
		字体大小 font-size
		1像素实线边框 border：1px solid red
		1像素虚线边框 border：1px butted red
		div居中 margin-left：auto
				margin-right：auto
		文本居中 text-align：center
		超链接去下划线 text-decoration：none
		表格细线 
			table{
				border: 1px solid black;//设置边框
				border-collapse:collapse;//将边框合并
			}
			td,th{
				border: 1px solid black;
			}
		列表去除修饰
			ul{
				list-style: none;
			}

3、JavaScript介绍
	JavaScript语言诞生主要是完成页面地数据验证，因此它运行在客户端，需要运行浏览器来解析执行JavaScript代码；
	JavaScript特点：
		交互性（信息的动态交互）
		安全性（不允许直接访问本地硬盘）
		跨平台性（可以解释JS的浏览器都可以执行）
	
