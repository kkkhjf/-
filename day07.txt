1、继承性
    继承的特点：
        减少代码冗余，提高代码的流通性；
        便于类的扩展；
        是多态性的前提。
    继承的格式：
        class A extends class B{} [A:子类，B:父类 extends：继承关键字]
    Java中关于继承性的规定：
        一个类可以被多个类继承；
        一个类不能从多个类继承，一个类只能有一个父类；
        子父类是相对的概念；
        直接从父类继承成为直接父类，间接继承的父类称为间接父类；
        子类继承父类后就获得了所有间接父类中声明的属性和方法。
    Object类的理解
        若果没有显式地声明一个类的父类，则此类继承于java.lang.Object类；
        所有的Java类（除java.lang.Object类外）都继承于Object类，意味着所有的Java类具有Object类地功能。

2、方法重写
    重写的含义：
        在子类中根据需要对从父类继承过来的方法进行改造，也称为方法地重置、覆盖。在程序执行时，
        子类方法将覆盖父类方法。
    重写的要求：
        子类重写地方法必须和父类被重写的方法具有相同的方法名、参数类型；
        子类重写地方法返回值类型不能大于父类重写地方法的返回值：
            父类返回类型是void，则子类重写的方法返回类型只能是void；
            父类被重写的方法返回值类型是A类型，则子类重写的方法返回值可以是A类型或A的子类；
            父类被重写的方法返回值类型是基本数据类型，子类重写的方法返回类型不许是相等的基本数据类型。
        子类重写的方法使用的访问权限不能小于父类被重写的方法的访问权限（子类不能重写父类中的private方法）；
        子类方法抛出的异常不能大于父类方法抛出的异常。
        子类和父类的同名同参数的方法要么声明为非static（考虑重写）的，要么声明为static（不能重写）。
      
3、protect权限
    protect权限修饰符修饰的属性和方法对子类来说相当于public，对于其他类来说相当于private；
    不同包的子类可以调用父类中被protect修饰的属性和方法，不同工程中被protect修饰的属性或方法不能被访问。
